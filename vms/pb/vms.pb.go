// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.7
// source: vms.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// common response
type VMOperationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMOperationResponse) Reset() {
	*x = VMOperationResponse{}
	mi := &file_vms_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMOperationResponse) ProtoMessage() {}

func (x *VMOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMOperationResponse.ProtoReflect.Descriptor instead.
func (*VMOperationResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{0}
}

func (x *VMOperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *VMOperationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Libvirt 创建请求
type CreateVMWithLibvirtRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu           int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`       // 明确使用 int32 而非 int
	Memory        int32                  `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"` // 内存单位建议注明（如 MB）
	DiskPath      string                 `protobuf:"bytes,5,opt,name=disk_path,json=diskPath,proto3" json:"disk_path,omitempty"`
	IsoPath       string                 `protobuf:"bytes,6,opt,name=iso_path,json=isoPath,proto3" json:"iso_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMWithLibvirtRequest) Reset() {
	*x = CreateVMWithLibvirtRequest{}
	mi := &file_vms_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMWithLibvirtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMWithLibvirtRequest) ProtoMessage() {}

func (x *CreateVMWithLibvirtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMWithLibvirtRequest.ProtoReflect.Descriptor instead.
func (*CreateVMWithLibvirtRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{1}
}

func (x *CreateVMWithLibvirtRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMWithLibvirtRequest) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateVMWithLibvirtRequest) GetDiskPath() string {
	if x != nil {
		return x.DiskPath
	}
	return ""
}

func (x *CreateVMWithLibvirtRequest) GetIsoPath() string {
	if x != nil {
		return x.IsoPath
	}
	return ""
}

// Multipass 创建请求
type CreateVMWithMultipassRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu    int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// with K, M, G suffix.
	Memory string `protobuf:"bytes,4,opt,name=memory,proto3" json:"memory,omitempty"`
	// with K, M, G suffix.
	DiskSize string `protobuf:"bytes,5,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// image name or path
	Image         string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMWithMultipassRequest) Reset() {
	*x = CreateVMWithMultipassRequest{}
	mi := &file_vms_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMWithMultipassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMWithMultipassRequest) ProtoMessage() {}

func (x *CreateVMWithMultipassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMWithMultipassRequest.ProtoReflect.Descriptor instead.
func (*CreateVMWithMultipassRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{2}
}

func (x *CreateVMWithMultipassRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMWithMultipassRequest) GetMemory() string {
	if x != nil {
		return x.Memory
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetDiskSize() string {
	if x != nil {
		return x.DiskSize
	}
	return ""
}

func (x *CreateVMWithMultipassRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type CreateVMRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	Id     string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	Cpu    int32                  `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu,omitempty"`
	// unit MB
	Memory int32 `protobuf:"varint,4,opt,name=memory,proto3" json:"memory,omitempty"`
	// unit GB
	DiskSize int32 `protobuf:"varint,5,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	// image name or path
	Image         string `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVMRequest) Reset() {
	*x = CreateVMRequest{}
	mi := &file_vms_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVMRequest) ProtoMessage() {}

func (x *CreateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVMRequest.ProtoReflect.Descriptor instead.
func (*CreateVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{3}
}

func (x *CreateVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

func (x *CreateVMRequest) GetCpu() int32 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *CreateVMRequest) GetMemory() int32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *CreateVMRequest) GetDiskSize() int32 {
	if x != nil {
		return x.DiskSize
	}
	return 0
}

func (x *CreateVMRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

// 其他操作请求
type StartVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartVMRequest) Reset() {
	*x = StartVMRequest{}
	mi := &file_vms_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartVMRequest) ProtoMessage() {}

func (x *StartVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartVMRequest.ProtoReflect.Descriptor instead.
func (*StartVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{4}
}

func (x *StartVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type StopVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopVMRequest) Reset() {
	*x = StopVMRequest{}
	mi := &file_vms_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopVMRequest) ProtoMessage() {}

func (x *StopVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopVMRequest.ProtoReflect.Descriptor instead.
func (*StopVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{5}
}

func (x *StopVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StopVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type DeleteVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteVMRequest) Reset() {
	*x = DeleteVMRequest{}
	mi := &file_vms_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVMRequest) ProtoMessage() {}

func (x *DeleteVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVMRequest.ProtoReflect.Descriptor instead.
func (*DeleteVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DeleteVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type UpdateVMRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VmName        string                 `protobuf:"bytes,2,opt,name=vm_name,json=vmName,proto3" json:"vm_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateVMRequest) Reset() {
	*x = UpdateVMRequest{}
	mi := &file_vms_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVMRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVMRequest) ProtoMessage() {}

func (x *UpdateVMRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVMRequest.ProtoReflect.Descriptor instead.
func (*UpdateVMRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateVMRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVMRequest) GetVmName() string {
	if x != nil {
		return x.VmName
	}
	return ""
}

type ListVMInstanceReqeust struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMInstanceReqeust) Reset() {
	*x = ListVMInstanceReqeust{}
	mi := &file_vms_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMInstanceReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMInstanceReqeust) ProtoMessage() {}

func (x *ListVMInstanceReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMInstanceReqeust.ProtoReflect.Descriptor instead.
func (*ListVMInstanceReqeust) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{8}
}

func (x *ListVMInstanceReqeust) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VMInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         string                 `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Ip            string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Image         string                 `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VMInfo) Reset() {
	*x = VMInfo{}
	mi := &file_vms_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VMInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VMInfo) ProtoMessage() {}

func (x *VMInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VMInfo.ProtoReflect.Descriptor instead.
func (*VMInfo) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{9}
}

func (x *VMInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VMInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *VMInfo) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *VMInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type ListVMInstanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VmInfos       []*VMInfo              `protobuf:"bytes,1,rep,name=vm_infos,json=vmInfos,proto3" json:"vm_infos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVMInstanceResponse) Reset() {
	*x = ListVMInstanceResponse{}
	mi := &file_vms_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVMInstanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVMInstanceResponse) ProtoMessage() {}

func (x *ListVMInstanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVMInstanceResponse.ProtoReflect.Descriptor instead.
func (*ListVMInstanceResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{10}
}

func (x *ListVMInstanceResponse) GetVmInfos() []*VMInfo {
	if x != nil {
		return x.VmInfos
	}
	return nil
}

type ListImageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImageRequest) Reset() {
	*x = ListImageRequest{}
	mi := &file_vms_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageRequest) ProtoMessage() {}

func (x *ListImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageRequest.ProtoReflect.Descriptor instead.
func (*ListImageRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{11}
}

func (x *ListImageRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Images        []string               `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListImageResponse) Reset() {
	*x = ListImageResponse{}
	mi := &file_vms_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListImageResponse) ProtoMessage() {}

func (x *ListImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListImageResponse.ProtoReflect.Descriptor instead.
func (*ListImageResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{12}
}

func (x *ListImageResponse) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

type MultipassExecRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	InstanceName  string                 `protobuf:"bytes,2,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	Command       string                 `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipassExecRequest) Reset() {
	*x = MultipassExecRequest{}
	mi := &file_vms_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipassExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipassExecRequest) ProtoMessage() {}

func (x *MultipassExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipassExecRequest.ProtoReflect.Descriptor instead.
func (*MultipassExecRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{13}
}

func (x *MultipassExecRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MultipassExecRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *MultipassExecRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type MultipassExecResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MultipassExecResponse) Reset() {
	*x = MultipassExecResponse{}
	mi := &file_vms_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MultipassExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipassExecResponse) ProtoMessage() {}

func (x *MultipassExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipassExecResponse.ProtoReflect.Descriptor instead.
func (*MultipassExecResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{14}
}

func (x *MultipassExecResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

type CreateVolWithLibvirtReqeust struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pool  string                 `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	// unit GB
	Capacity      int32  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Format        string `protobuf:"bytes,5,opt,name=format,proto3" json:"format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolWithLibvirtReqeust) Reset() {
	*x = CreateVolWithLibvirtReqeust{}
	mi := &file_vms_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolWithLibvirtReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolWithLibvirtReqeust) ProtoMessage() {}

func (x *CreateVolWithLibvirtReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolWithLibvirtReqeust.ProtoReflect.Descriptor instead.
func (*CreateVolWithLibvirtReqeust) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{15}
}

func (x *CreateVolWithLibvirtReqeust) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *CreateVolWithLibvirtReqeust) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *CreateVolWithLibvirtReqeust) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CreateVolWithLibvirtResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pool          string                 `protobuf:"bytes,1,opt,name=pool,proto3" json:"pool,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateVolWithLibvirtResponse) Reset() {
	*x = CreateVolWithLibvirtResponse{}
	mi := &file_vms_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateVolWithLibvirtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVolWithLibvirtResponse) ProtoMessage() {}

func (x *CreateVolWithLibvirtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVolWithLibvirtResponse.ProtoReflect.Descriptor instead.
func (*CreateVolWithLibvirtResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{16}
}

func (x *CreateVolWithLibvirtResponse) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *CreateVolWithLibvirtResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateVolWithLibvirtResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetVolRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PoolName      string                 `protobuf:"bytes,2,opt,name=pool_name,json=poolName,proto3" json:"pool_name,omitempty"`
	VolName       string                 `protobuf:"bytes,3,opt,name=vol_name,json=volName,proto3" json:"vol_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolRequest) Reset() {
	*x = GetVolRequest{}
	mi := &file_vms_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolRequest) ProtoMessage() {}

func (x *GetVolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolRequest.ProtoReflect.Descriptor instead.
func (*GetVolRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{17}
}

func (x *GetVolRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetVolRequest) GetPoolName() string {
	if x != nil {
		return x.PoolName
	}
	return ""
}

func (x *GetVolRequest) GetVolName() string {
	if x != nil {
		return x.VolName
	}
	return ""
}

type GetVolResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Pool  string                 `protobuf:"bytes,3,opt,name=pool,proto3" json:"pool,omitempty"`
	// unit GB
	Capacity      int32  `protobuf:"varint,4,opt,name=capacity,proto3" json:"capacity,omitempty"`
	Path          string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVolResponse) Reset() {
	*x = GetVolResponse{}
	mi := &file_vms_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVolResponse) ProtoMessage() {}

func (x *GetVolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVolResponse.ProtoReflect.Descriptor instead.
func (*GetVolResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{18}
}

func (x *GetVolResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVolResponse) GetPool() string {
	if x != nil {
		return x.Pool
	}
	return ""
}

func (x *GetVolResponse) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *GetVolResponse) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         int32                  `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End           int32                  `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeRequest) Reset() {
	*x = ListNodeRequest{}
	mi := &file_vms_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeRequest) ProtoMessage() {}

func (x *ListNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeRequest.ProtoReflect.Descriptor instead.
func (*ListNodeRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{19}
}

func (x *ListNodeRequest) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *ListNodeRequest) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Node struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Os    string                 `protobuf:"bytes,2,opt,name=os,proto3" json:"os,omitempty"`
	// multipass or libvirt
	VmType         string `protobuf:"bytes,3,opt,name=vm_type,json=vmType,proto3" json:"vm_type,omitempty"`
	TotalCpu       int32  `protobuf:"varint,4,opt,name=total_cpu,json=totalCpu,proto3" json:"total_cpu,omitempty"`
	TotalMemory    int32  `protobuf:"varint,5,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`
	SystemDiskSize int32  `protobuf:"varint,6,opt,name=system_disk_size,json=systemDiskSize,proto3" json:"system_disk_size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_vms_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{20}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Node) GetVmType() string {
	if x != nil {
		return x.VmType
	}
	return ""
}

func (x *Node) GetTotalCpu() int32 {
	if x != nil {
		return x.TotalCpu
	}
	return 0
}

func (x *Node) GetTotalMemory() int32 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *Node) GetSystemDiskSize() int32 {
	if x != nil {
		return x.SystemDiskSize
	}
	return 0
}

type ListNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeResponse) Reset() {
	*x = ListNodeResponse{}
	mi := &file_vms_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeResponse) ProtoMessage() {}

func (x *ListNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeResponse.ProtoReflect.Descriptor instead.
func (*ListNodeResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{21}
}

func (x *ListNodeResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodeResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_vms_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{22}
}

func (x *GetNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_vms_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vms_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_vms_proto_rawDescGZIP(), []int{23}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

var File_vms_proto protoreflect.FileDescriptor

const file_vms_proto_rawDesc = "" +
	"\n" +
	"\tvms.proto\x12\x02pb\"I\n" +
	"\x13VMOperationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa7\x01\n" +
	"\x1aCreateVMWithLibvirtRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\x05R\x06memory\x12\x1b\n" +
	"\tdisk_path\x18\x05 \x01(\tR\bdiskPath\x12\x19\n" +
	"\biso_path\x18\x06 \x01(\tR\aisoPath\"\xa4\x01\n" +
	"\x1cCreateVMWithMultipassRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\tR\x06memory\x12\x1b\n" +
	"\tdisk_size\x18\x05 \x01(\tR\bdiskSize\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\"\x97\x01\n" +
	"\x0fCreateVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\x12\x10\n" +
	"\x03cpu\x18\x03 \x01(\x05R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x04 \x01(\x05R\x06memory\x12\x1b\n" +
	"\tdisk_size\x18\x05 \x01(\x05R\bdiskSize\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\"9\n" +
	"\x0eStartVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"8\n" +
	"\rStopVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\":\n" +
	"\x0fDeleteVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\":\n" +
	"\x0fUpdateVMRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\avm_name\x18\x02 \x01(\tR\x06vmName\"'\n" +
	"\x15ListVMInstanceReqeust\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"X\n" +
	"\x06VMInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05state\x18\x02 \x01(\tR\x05state\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x14\n" +
	"\x05image\x18\x04 \x01(\tR\x05image\"?\n" +
	"\x16ListVMInstanceResponse\x12%\n" +
	"\bvm_infos\x18\x01 \x03(\v2\n" +
	".pb.VMInfoR\avmInfos\"\"\n" +
	"\x10ListImageRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"+\n" +
	"\x11ListImageResponse\x12\x16\n" +
	"\x06images\x18\x01 \x03(\tR\x06images\"e\n" +
	"\x14multipassExecRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12#\n" +
	"\rinstance_name\x18\x02 \x01(\tR\finstanceName\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\"/\n" +
	"\x15multipassExecResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\"\x89\x01\n" +
	"\x1bCreateVolWithLibvirtReqeust\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04pool\x18\x03 \x01(\tR\x04pool\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\x12\x16\n" +
	"\x06format\x18\x05 \x01(\tR\x06format\"X\n" +
	"\x1cCreateVolWithLibvirtResponse\x12\x12\n" +
	"\x04pool\x18\x01 \x01(\tR\x04pool\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x10\n" +
	"\x03key\x18\x03 \x01(\tR\x03key\"W\n" +
	"\rGetVolRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tpool_name\x18\x02 \x01(\tR\bpoolName\x12\x19\n" +
	"\bvol_name\x18\x03 \x01(\tR\avolName\"h\n" +
	"\x0eGetVolResponse\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04pool\x18\x03 \x01(\tR\x04pool\x12\x1a\n" +
	"\bcapacity\x18\x04 \x01(\x05R\bcapacity\x12\x12\n" +
	"\x04path\x18\x05 \x01(\tR\x04path\"9\n" +
	"\x0fListNodeRequest\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x05R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x05R\x03end\"\xa9\x01\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02os\x18\x02 \x01(\tR\x02os\x12\x17\n" +
	"\avm_type\x18\x03 \x01(\tR\x06vmType\x12\x1b\n" +
	"\ttotal_cpu\x18\x04 \x01(\x05R\btotalCpu\x12!\n" +
	"\ftotal_memory\x18\x05 \x01(\x05R\vtotalMemory\x12(\n" +
	"\x10system_disk_size\x18\x06 \x01(\x05R\x0esystemDiskSize\"H\n" +
	"\x10ListNodeResponse\x12\x1e\n" +
	"\x05nodes\x18\x01 \x03(\v2\b.pb.NodeR\x05nodes\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\" \n" +
	"\x0eGetNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"/\n" +
	"\x0fGetNodeResponse\x12\x1c\n" +
	"\x04node\x18\x01 \x01(\v2\b.pb.NodeR\x04node2\x85\a\n" +
	"\x03Vms\x12N\n" +
	"\x13CreateVMWithLibvirt\x12\x1e.pb.CreateVMWithLibvirtRequest\x1a\x17.pb.VMOperationResponse\x12Y\n" +
	"\x14CreateVolWithLibvirt\x12\x1f.pb.CreateVolWithLibvirtReqeust\x1a .pb.CreateVolWithLibvirtResponse\x12/\n" +
	"\x06GetVol\x12\x11.pb.GetVolRequest\x1a\x12.pb.GetVolResponse\x128\n" +
	"\bCreateVM\x12\x13.pb.CreateVMRequest\x1a\x17.pb.VMOperationResponse\x126\n" +
	"\aStartVM\x12\x12.pb.StartVMRequest\x1a\x17.pb.VMOperationResponse\x124\n" +
	"\x06StopVM\x12\x11.pb.StopVMRequest\x1a\x17.pb.VMOperationResponse\x128\n" +
	"\bDeleteVM\x12\x13.pb.DeleteVMRequest\x1a\x17.pb.VMOperationResponse\x12G\n" +
	"\x0eListVMInstance\x12\x19.pb.ListVMInstanceReqeust\x1a\x1a.pb.ListVMInstanceResponse\x128\n" +
	"\tListImage\x12\x14.pb.ListImageRequest\x1a\x15.pb.ListImageResponse\x128\n" +
	"\bUpdateVM\x12\x13.pb.UpdateVMRequest\x1a\x17.pb.VMOperationResponse\x12R\n" +
	"\x15CreateVMWithMultipass\x12 .pb.CreateVMWithMultipassRequest\x1a\x17.pb.VMOperationResponse\x12D\n" +
	"\rMultipassExec\x12\x18.pb.multipassExecRequest\x1a\x19.pb.multipassExecResponse\x125\n" +
	"\bListNode\x12\x13.pb.ListNodeRequest\x1a\x14.pb.ListNodeResponse\x122\n" +
	"\aGetNode\x12\x12.pb.GetNodeRequest\x1a\x13.pb.GetNodeResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_vms_proto_rawDescOnce sync.Once
	file_vms_proto_rawDescData []byte
)

func file_vms_proto_rawDescGZIP() []byte {
	file_vms_proto_rawDescOnce.Do(func() {
		file_vms_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vms_proto_rawDesc), len(file_vms_proto_rawDesc)))
	})
	return file_vms_proto_rawDescData
}

var file_vms_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_vms_proto_goTypes = []any{
	(*VMOperationResponse)(nil),          // 0: pb.VMOperationResponse
	(*CreateVMWithLibvirtRequest)(nil),   // 1: pb.CreateVMWithLibvirtRequest
	(*CreateVMWithMultipassRequest)(nil), // 2: pb.CreateVMWithMultipassRequest
	(*CreateVMRequest)(nil),              // 3: pb.CreateVMRequest
	(*StartVMRequest)(nil),               // 4: pb.StartVMRequest
	(*StopVMRequest)(nil),                // 5: pb.StopVMRequest
	(*DeleteVMRequest)(nil),              // 6: pb.DeleteVMRequest
	(*UpdateVMRequest)(nil),              // 7: pb.UpdateVMRequest
	(*ListVMInstanceReqeust)(nil),        // 8: pb.ListVMInstanceReqeust
	(*VMInfo)(nil),                       // 9: pb.VMInfo
	(*ListVMInstanceResponse)(nil),       // 10: pb.ListVMInstanceResponse
	(*ListImageRequest)(nil),             // 11: pb.ListImageRequest
	(*ListImageResponse)(nil),            // 12: pb.ListImageResponse
	(*MultipassExecRequest)(nil),         // 13: pb.multipassExecRequest
	(*MultipassExecResponse)(nil),        // 14: pb.multipassExecResponse
	(*CreateVolWithLibvirtReqeust)(nil),  // 15: pb.CreateVolWithLibvirtReqeust
	(*CreateVolWithLibvirtResponse)(nil), // 16: pb.CreateVolWithLibvirtResponse
	(*GetVolRequest)(nil),                // 17: pb.GetVolRequest
	(*GetVolResponse)(nil),               // 18: pb.GetVolResponse
	(*ListNodeRequest)(nil),              // 19: pb.ListNodeRequest
	(*Node)(nil),                         // 20: pb.Node
	(*ListNodeResponse)(nil),             // 21: pb.ListNodeResponse
	(*GetNodeRequest)(nil),               // 22: pb.GetNodeRequest
	(*GetNodeResponse)(nil),              // 23: pb.GetNodeResponse
}
var file_vms_proto_depIdxs = []int32{
	9,  // 0: pb.ListVMInstanceResponse.vm_infos:type_name -> pb.VMInfo
	20, // 1: pb.ListNodeResponse.nodes:type_name -> pb.Node
	20, // 2: pb.GetNodeResponse.node:type_name -> pb.Node
	1,  // 3: pb.Vms.CreateVMWithLibvirt:input_type -> pb.CreateVMWithLibvirtRequest
	15, // 4: pb.Vms.CreateVolWithLibvirt:input_type -> pb.CreateVolWithLibvirtReqeust
	17, // 5: pb.Vms.GetVol:input_type -> pb.GetVolRequest
	3,  // 6: pb.Vms.CreateVM:input_type -> pb.CreateVMRequest
	4,  // 7: pb.Vms.StartVM:input_type -> pb.StartVMRequest
	5,  // 8: pb.Vms.StopVM:input_type -> pb.StopVMRequest
	6,  // 9: pb.Vms.DeleteVM:input_type -> pb.DeleteVMRequest
	8,  // 10: pb.Vms.ListVMInstance:input_type -> pb.ListVMInstanceReqeust
	11, // 11: pb.Vms.ListImage:input_type -> pb.ListImageRequest
	7,  // 12: pb.Vms.UpdateVM:input_type -> pb.UpdateVMRequest
	2,  // 13: pb.Vms.CreateVMWithMultipass:input_type -> pb.CreateVMWithMultipassRequest
	13, // 14: pb.Vms.MultipassExec:input_type -> pb.multipassExecRequest
	19, // 15: pb.Vms.ListNode:input_type -> pb.ListNodeRequest
	22, // 16: pb.Vms.GetNode:input_type -> pb.GetNodeRequest
	0,  // 17: pb.Vms.CreateVMWithLibvirt:output_type -> pb.VMOperationResponse
	16, // 18: pb.Vms.CreateVolWithLibvirt:output_type -> pb.CreateVolWithLibvirtResponse
	18, // 19: pb.Vms.GetVol:output_type -> pb.GetVolResponse
	0,  // 20: pb.Vms.CreateVM:output_type -> pb.VMOperationResponse
	0,  // 21: pb.Vms.StartVM:output_type -> pb.VMOperationResponse
	0,  // 22: pb.Vms.StopVM:output_type -> pb.VMOperationResponse
	0,  // 23: pb.Vms.DeleteVM:output_type -> pb.VMOperationResponse
	10, // 24: pb.Vms.ListVMInstance:output_type -> pb.ListVMInstanceResponse
	12, // 25: pb.Vms.ListImage:output_type -> pb.ListImageResponse
	0,  // 26: pb.Vms.UpdateVM:output_type -> pb.VMOperationResponse
	0,  // 27: pb.Vms.CreateVMWithMultipass:output_type -> pb.VMOperationResponse
	14, // 28: pb.Vms.MultipassExec:output_type -> pb.multipassExecResponse
	21, // 29: pb.Vms.ListNode:output_type -> pb.ListNodeResponse
	23, // 30: pb.Vms.GetNode:output_type -> pb.GetNodeResponse
	17, // [17:31] is the sub-list for method output_type
	3,  // [3:17] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_vms_proto_init() }
func file_vms_proto_init() {
	if File_vms_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vms_proto_rawDesc), len(file_vms_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vms_proto_goTypes,
		DependencyIndexes: file_vms_proto_depIdxs,
		MessageInfos:      file_vms_proto_msgTypes,
	}.Build()
	File_vms_proto = out.File
	file_vms_proto_goTypes = nil
	file_vms_proto_depIdxs = nil
}
