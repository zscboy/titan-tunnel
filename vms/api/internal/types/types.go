// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.2

package types

type CreateVMRequest struct {
	Id       string `json:"id"`
	VmName   string `json:"vm_name"`
	Cpu      int32  `json:"cpu"`
	Memory   int32  `json:"memory"`
	DiskSize int32  `json:"disk_size"`
	Image    string `json:"image"`
}

type CreateVolWithLibvirtReqeust struct {
	Id         string `json:"id"`
	Name       string `json:"name"`
	Pool       string `json:"pool"`
	Capacity   int32  `json:"capacity"`
	Allocation int32  `json:"allocation"`
	Format     string `json:"format"`
}

type CreateVolWithLibvirtResponse struct {
	Pool string `json:"pool"`
	Name string `json:"name"`
	Key  string `json:"key"`
}

type DeleteVMRequest struct {
	Id     string `json:"id"`
	VmName string `json:"vm_name"`
}

type ListImageRequest struct {
	Id string `json:"id"`
}

type ListImageResponse struct {
	Images []string `json:"images"`
}

type ListVMInstanceReqeust struct {
	Id string `json:"id"`
}

type ListVMInstanceResponse struct {
	VmInfos []VMInfo `json:"vm_infos"`
}

type StartVMRequest struct {
	Id     string `json:"id"`
	VmName string `json:"vm_name"`
}

type StopVMRequest struct {
	Id     string `json:"id"`
	VmName string `json:"vm_name"`
}

type UpdateVMRequest struct {
	Id     string `json:"id"`
	VmName string `json:"vm_name"`
}

type VMInfo struct {
	Name  string `json:"name"`
	State string `json:"state"`
	Ip    string `json:"ip"`
	Image string `json:"image"`
}

type VMOperationResponse struct {
	Success bool   `json:"success"`
	Message string `json:"message"`
}

type MultipassExecRequest struct {
	Id           string `json:"id"`
	InstanceName string `json:"instance_name"`
	Command      string `json:"command"`
}

type MultipassExecResponse struct {
	Output string `json:"output"`
}
